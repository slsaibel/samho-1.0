/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.samho.apresentacao;

import com.samho.negocio.Medicamentos;
import com.samho.negocio.Pessoas;
import com.samho.negocio.Principal;
import com.samho.util.JTextFieldDocument;
import com.samho.util.Util;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 * Classe para visualização de objetos do tipo FrmManutencao.
 *
 * @author Saibel, Sergio Luis
 * @since  date 01/05/2017
 *
 * @version  revision 001.20170105 date 01/05/2017 author Saibel, Sérgio Luis reason
 * Conseguir instanciar um objeto do tipo FrmMaunutenção com os atributos e
 * métodos necessários. Esta classe tem como objetivo manipular os objetos 
 * definidos e ou obtidos a fim de manipular informações.
 * Esta extende um JInternalFrame ou seja necessita de um Frame como pai.
 * Métodos principais: Definição, Obtenção e Visualização do objeto.
 * 
 */
public final class IFrmManMedicamento extends JInternalFrame {

    // Declaração de atributos
    private Medicamentos medicamento;

    // Construtor
    public IFrmManMedicamento(Medicamentos medicamento) throws Exception {
        initComponents();

        Util.limparCampos(rootPane);

        this.medicamento = medicamento;

        // Permite que somente números sejam informados neste campo
        txtCodigo.setDocument(new JTextFieldDocument(true));
        txtCodPessoa.setDocument(new JTextFieldDocument(true));
        // Converte para caixa alta a string informada no campo
        txtDescicao.setDocument(new JTextFieldDocument(false));

        // Quebra de linha automática
        txtObservacoes.setLineWrap(true);
        txtObservacoes.setWrapStyleWord(true);

        carregarObjetoIFrmManutencao(medicamento);
    }

    public void carregarObjetoIFrmManutencao(Medicamentos medicamento) {
        try {
            if (medicamento.getIdMedicamento()!= -1) {
                txtCodigo.setText(String.valueOf(medicamento.getIdMedicamento()));
            } else {
                txtCodigo.setText(String.valueOf(
                        medicamento.getMedicamentoDAO().getProximoID()));
            }
            
            txtCodPessoa.setText(String.valueOf(
                    medicamento.getCodPessoaJuridica()));
            pesquisarCodigoDescicaoPessoa(new Pessoas(Pessoas.TIPO_JURIDICA));
            txtDescicao.setText(medicamento.getDescricao());
            txtObservacoes.setText(medicamento.getObservacoes());
            chkAtivo.setSelected(medicamento.isAtivo());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Registro nao pode ser carregado.\n\nMotivo: " + ex);
        }
    }

    private void reescreverObjeto() {
        try {
            medicamento.setIdMedicamento(Long.parseUnsignedLong(
                    txtCodigo.getText()));
            medicamento.setCodPessoaJuridica(Long.parseUnsignedLong(
                    txtCodPessoa.getText()));
            medicamento.setDescricao(txtDescicao.getText());
            medicamento.setObservacoes(txtObservacoes.getText());
            medicamento.setAtivo(chkAtivo.isSelected());

            medicamento.adicionarCampos();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Registro nao pode ser reescrito.\n\nMotivo: " + ex);
        }
    }
    
    public void pesquisarCodigoDescicaoPessoa(Pessoas pessoa) {
        Util.pesquisarCodigoDescicao(pessoa, txtCodPessoa, txtNomePessoa);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablManutencao = new javax.swing.JTabbedPane();
        pnlGeral = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescicao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacoes = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        chkAtivo = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        txtCodPessoa = new javax.swing.JTextField();
        lblLocalizarPessoa = new javax.swing.JLabel();
        txtNomePessoa = new javax.swing.JTextField();
        pnlBotoes = new javax.swing.JPanel();
        btnConfirmar = new javax.swing.JButton();
        btnAjudar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        mnuBarPrincipal = new javax.swing.JMenuBar();
        mnuArquivos = new javax.swing.JMenu();
        mnuAjuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Medicamentos");
        setMaximumSize(new java.awt.Dimension(730, 352));
        setMinimumSize(new java.awt.Dimension(730, 352));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(730, 352));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        getContentPane().setLayout(null);

        tablManutencao.setMinimumSize(new java.awt.Dimension(713, 245));
        tablManutencao.setName(""); // NOI18N

        pnlGeral.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Cód. Medicamento");
        pnlGeral.add(jLabel1);
        jLabel1.setBounds(31, 15, 104, 14);

        txtCodigo.setEditable(false);
        txtCodigo.setBackground(java.awt.SystemColor.info);
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pnlGeral.add(txtCodigo);
        txtCodigo.setBounds(140, 11, 70, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Descrição");
        pnlGeral.add(jLabel2);
        jLabel2.setBounds(80, 64, 55, 14);

        txtDescicao.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtDescicao);
        txtDescicao.setBounds(140, 61, 500, 20);

        jLabel8.setText("Observações");
        pnlGeral.add(jLabel8);
        jLabel8.setBounds(72, 89, 63, 14);

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(32767, 500));

        txtObservacoes.setColumns(60);
        txtObservacoes.setRows(5);
        txtObservacoes.setAutoscrolls(false);
        txtObservacoes.setMaximumSize(new java.awt.Dimension(164, 94));
        txtObservacoes.setMinimumSize(new java.awt.Dimension(164, 94));
        jScrollPane1.setViewportView(txtObservacoes);

        pnlGeral.add(jScrollPane1);
        jScrollPane1.setBounds(140, 86, 500, 114);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Ativo");
        pnlGeral.add(jLabel7);
        jLabel7.setBounds(100, 205, 30, 14);

        chkAtivo.setToolTipText("");
        pnlGeral.add(chkAtivo);
        chkAtivo.setBounds(135, 202, 21, 21);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Cód. Pessoa");
        pnlGeral.add(jLabel3);
        jLabel3.setBounds(67, 40, 67, 14);

        txtCodPessoa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCodPessoa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodPessoaFocusLost(evt);
            }
        });
        pnlGeral.add(txtCodPessoa);
        txtCodPessoa.setBounds(140, 36, 70, 20);

        lblLocalizarPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/localizar.png"))); // NOI18N
        lblLocalizarPessoa.setToolTipText("Localizar uma pessoa já cadastrada.");
        lblLocalizarPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblLocalizarPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblLocalizarPessoaMouseReleased(evt);
            }
        });
        pnlGeral.add(lblLocalizarPessoa);
        lblLocalizarPessoa.setBounds(215, 36, 20, 20);

        txtNomePessoa.setEditable(false);
        txtNomePessoa.setBackground(java.awt.SystemColor.info);
        txtNomePessoa.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtNomePessoa);
        txtNomePessoa.setBounds(240, 36, 402, 20);

        tablManutencao.addTab("Geral", pnlGeral);

        getContentPane().add(tablManutencao);
        tablManutencao.setBounds(0, 0, 710, 260);
        tablManutencao.getAccessibleContext().setAccessibleName("");

        pnlBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        pnlBotoes.setName("pnlBotao"); // NOI18N
        pnlBotoes.setPreferredSize(new java.awt.Dimension(229, 33));

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/confirmar.png"))); // NOI18N
        btnConfirmar.setText("Ok");
        btnConfirmar.setToolTipText("");
        btnConfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmar.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnConfirmar.setMaximumSize(new java.awt.Dimension(70, 20));
        btnConfirmar.setMinimumSize(new java.awt.Dimension(70, 20));
        btnConfirmar.setName("btnConfirmar"); // NOI18N
        btnConfirmar.setPreferredSize(new java.awt.Dimension(85, 25));
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnAjudar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ajudar.png"))); // NOI18N
        btnAjudar.setToolTipText("");
        btnAjudar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAjudar.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btnAjudar.setMaximumSize(new java.awt.Dimension(70, 20));
        btnAjudar.setMinimumSize(new java.awt.Dimension(70, 20));
        btnAjudar.setName("btnAjudar"); // NOI18N
        btnAjudar.setPreferredSize(new java.awt.Dimension(85, 25));
        btnAjudar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjudarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnCancelar.setMaximumSize(new java.awt.Dimension(70, 20));
        btnCancelar.setMinimumSize(new java.awt.Dimension(70, 20));
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.setPreferredSize(new java.awt.Dimension(85, 25));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesLayout = new javax.swing.GroupLayout(pnlBotoes);
        pnlBotoes.setLayout(pnlBotoesLayout);
        pnlBotoesLayout.setHorizontalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAjudar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        pnlBotoesLayout.setVerticalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAjudar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlBotoes);
        pnlBotoes.setBounds(0, 263, 713, 38);

        mnuArquivos.setText("Arquivo");
        mnuBarPrincipal.add(mnuArquivos);

        mnuAjuda.setText("Ajuda");
        mnuBarPrincipal.add(mnuAjuda);

        setJMenuBar(mnuBarPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        reescreverObjeto();

        Util.salvar(medicamento, this, true);
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Util.cancelar(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAjudarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjudarActionPerformed
        Util.ajudar();
    }//GEN-LAST:event_btnAjudarActionPerformed

    private void txtCodPessoaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodPessoaFocusLost
        pesquisarCodigoDescicaoPessoa(new Pessoas(Pessoas.TIPO_JURIDICA));
    }//GEN-LAST:event_txtCodPessoaFocusLost

    private void lblLocalizarPessoaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLocalizarPessoaMouseReleased
        boolean[] acoes = Util.getAcoesUsuario(Principal.PESSOAS_JURIDICAS);

        if (!acoes[Util.CONSULTAR]) {
            JOptionPane.showMessageDialog(this.getParent(),
                "Você não pode efetuar esta consultadas.\n\nMotivo: "
                + "Usuário sem permissão.");
        } else {
            try {
                IFrmPesqPessoas iFrmPesqPessoas = new IFrmPesqPessoas(
                    new IFrmManPessoa(new Pessoas(Pessoas.TIPO_JURIDICA)), 
                        txtCodPessoa, txtNomePessoa);

                this.getParent().remove(iFrmPesqPessoas);
                this.getParent().add(iFrmPesqPessoas);

                Util.centralizar(this.getParent(), iFrmPesqPessoas);

                iFrmPesqPessoas.setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this.getParent(),
                    "Pessoa não pode ser consultada.\n\nMotivo: " + e);
            }
        }
    }//GEN-LAST:event_lblLocalizarPessoaMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjudar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JCheckBox chkAtivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLocalizarPessoa;
    private javax.swing.JMenu mnuAjuda;
    private javax.swing.JMenu mnuArquivos;
    private javax.swing.JMenuBar mnuBarPrincipal;
    private javax.swing.JPanel pnlBotoes;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JTabbedPane tablManutencao;
    private javax.swing.JTextField txtCodPessoa;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescicao;
    private javax.swing.JTextField txtNomePessoa;
    private javax.swing.JTextArea txtObservacoes;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the medicamento
     */
    public Medicamentos getMedicamento() {
        return medicamento;
    }

    /**
     * @param medicamento the medicamento to set
     */
    public void setMedicamento(Medicamentos medicamento) {
        this.medicamento = medicamento;
    }
}
