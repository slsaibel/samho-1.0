/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.samho.apresentacao;

import com.samho.negocio.Backups;
import com.samho.util.JTextFieldDocument;
import com.samho.util.Util;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 * Classe para visualização de objetos do tipo FrmManutencao.
 *
 * @author Saibel, Sergio Luis
 * @since  date 25/03/2014
 *
 * @version  revision 001.20140325 date 25/03/2014 author Saibel, Sérgio Luis reason
 * Conseguir instanciar um objeto do tipo FrmMaunutenção com os atributos e
 * métodos necessários. Esta classe servirá como base para todos os FRMs de
 * manutenção.
 */
public class IFrmManBackup extends JInternalFrame {

    // Declaração de atributos
    private final Backups backup;

    // Construtor
    public IFrmManBackup() {
        initComponents();

        Util.limparCampos(rootPane);

        // Permite que somente números sejam informados neste campo
        txtNumPorta.setDocument(new JTextFieldDocument(true));

        backup = new Backups();

        carregarObjetoIFrmManutencao();
    }

    public final void carregarObjetoIFrmManutencao() {
        try {
            backup.carregarPropriedades();

            txtNomeBanco.setText(backup.getNomeBanco());
            txtNomeServidor.setText(backup.getNomeServidor());
            txtNumPorta.setText(backup.getNumPorta());
            txtUsuario.setText(backup.getUsuario());
            txtSenha.setText(backup.getSenha());
            txtCaminhoPgRestore.setText(backup.getCaminhoPgRestore());
            txtCaminhoPgDump.setText(backup.getCaminhoPgDump());
            txtArquivoBackup.setText(backup.getArquivoBackup());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Arquivo nao pode ser carregado.\n\nMotivo: " + ex);
        }
    }

    private void reescreverObjeto() {
        try {
            backup.setNomeBanco(txtNomeBanco.getText());
            backup.setNomeServidor(txtNomeServidor.getText());
            backup.setNumPorta(txtNumPorta.getText());
            backup.setUsuario(txtUsuario.getText());
            backup.setSenha(String.valueOf(txtSenha.getPassword()));
            backup.setCaminhoPgRestore(txtCaminhoPgRestore.getText());
            backup.setCaminhoPgDump(txtCaminhoPgDump.getText());
            backup.setArquivoBackup(txtArquivoBackup.getText());

            backup.descarregarPropriedades();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Arquivo nao pode ser reescrito.\n\nMotivo: " + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fcSelecionarArquivo = new javax.swing.JFileChooser();
        tablManutencao = new javax.swing.JTabbedPane();
        pnlGeral = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtNomeBanco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNomeServidor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtNumPorta = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        txtCaminhoPgRestore = new javax.swing.JTextField();
        lblSelCaminhoPgRestore = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCaminhoPgDump = new javax.swing.JTextField();
        lblSelCaminhoPgDump = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtArquivoBackup = new javax.swing.JTextField();
        lblSelArquivoBackup = new javax.swing.JLabel();
        btnExecutarBackup = new javax.swing.JButton();
        btnExecutarRestore = new javax.swing.JButton();
        pnlBotoes = new javax.swing.JPanel();
        btnConfirmar = new javax.swing.JButton();
        btnAjudar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        mnuBarPrincipal = new javax.swing.JMenuBar();
        mnuArquivos = new javax.swing.JMenu();
        mnuAjuda = new javax.swing.JMenu();

        fcSelecionarArquivo.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurações de Backup");
        setMaximumSize(new java.awt.Dimension(730, 351));
        setMinimumSize(new java.awt.Dimension(730, 351));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(730, 351));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        tablManutencao.setMinimumSize(new java.awt.Dimension(713, 245));
        tablManutencao.setName(""); // NOI18N

        pnlGeral.setLayout(null);

        jLabel6.setText("Nome Banco");
        pnlGeral.add(jLabel6);
        jLabel6.setBounds(82, 14, 59, 14);

        txtNomeBanco.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtNomeBanco);
        txtNomeBanco.setBounds(145, 11, 500, 20);

        jLabel7.setText("Nome Servidor");
        pnlGeral.add(jLabel7);
        jLabel7.setBounds(71, 40, 70, 14);

        txtNomeServidor.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtNomeServidor);
        txtNomeServidor.setBounds(145, 37, 500, 20);

        jLabel1.setText("Núm. Porta");
        pnlGeral.add(jLabel1);
        jLabel1.setBounds(87, 66, 54, 14);

        txtNumPorta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pnlGeral.add(txtNumPorta);
        txtNumPorta.setBounds(145, 63, 70, 20);

        jLabel8.setText("Usuário");
        pnlGeral.add(jLabel8);
        jLabel8.setBounds(105, 92, 36, 14);

        txtUsuario.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtUsuario);
        txtUsuario.setBounds(145, 89, 200, 20);

        jLabel9.setText("Senha");
        pnlGeral.add(jLabel9);
        jLabel9.setBounds(411, 92, 30, 14);

        txtSenha.setText("jPasswordField1");
        pnlGeral.add(txtSenha);
        txtSenha.setBounds(445, 89, 200, 20);

        jLabel11.setText("Caminho: pg_restore");
        pnlGeral.add(jLabel11);
        jLabel11.setBounds(39, 118, 101, 14);

        txtCaminhoPgRestore.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtCaminhoPgRestore);
        txtCaminhoPgRestore.setBounds(144, 115, 500, 20);

        lblSelCaminhoPgRestore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pesquisar.png"))); // NOI18N
        lblSelCaminhoPgRestore.setToolTipText("Selecionar arquivo: pg_restore.exe");
        lblSelCaminhoPgRestore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSelCaminhoPgRestore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblSelCaminhoPgRestoreMouseReleased(evt);
            }
        });
        pnlGeral.add(lblSelCaminhoPgRestore);
        lblSelCaminhoPgRestore.setBounds(648, 115, 20, 20);

        jLabel5.setText("Caminho: pg_dump");
        pnlGeral.add(jLabel5);
        jLabel5.setBounds(48, 141, 92, 14);

        txtCaminhoPgDump.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtCaminhoPgDump);
        txtCaminhoPgDump.setBounds(144, 141, 500, 20);

        lblSelCaminhoPgDump.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pesquisar.png"))); // NOI18N
        lblSelCaminhoPgDump.setToolTipText("Selecionar arquivo: pg_dump.exe");
        lblSelCaminhoPgDump.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSelCaminhoPgDump.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblSelCaminhoPgDumpMouseReleased(evt);
            }
        });
        pnlGeral.add(lblSelCaminhoPgDump);
        lblSelCaminhoPgDump.setBounds(648, 141, 20, 20);

        jLabel10.setText("Arquivo Backup");
        pnlGeral.add(jLabel10);
        jLabel10.setBounds(66, 170, 74, 14);

        txtArquivoBackup.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pnlGeral.add(txtArquivoBackup);
        txtArquivoBackup.setBounds(144, 167, 500, 20);

        lblSelArquivoBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/pesquisar.png"))); // NOI18N
        lblSelArquivoBackup.setToolTipText("Selecionar arquivo: backupXXX.properties");
        lblSelArquivoBackup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSelArquivoBackup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblSelArquivoBackupMouseReleased(evt);
            }
        });
        pnlGeral.add(lblSelArquivoBackup);
        lblSelArquivoBackup.setBounds(648, 167, 20, 20);

        btnExecutarBackup.setText("Executar Backup");
        btnExecutarBackup.setMaximumSize(new java.awt.Dimension(117, 25));
        btnExecutarBackup.setMinimumSize(new java.awt.Dimension(117, 25));
        btnExecutarBackup.setPreferredSize(new java.awt.Dimension(117, 25));
        btnExecutarBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarBackupActionPerformed(evt);
            }
        });
        pnlGeral.add(btnExecutarBackup);
        btnExecutarBackup.setBounds(144, 193, 241, 25);

        btnExecutarRestore.setText("Executar Restore");
        btnExecutarRestore.setMaximumSize(new java.awt.Dimension(117, 25));
        btnExecutarRestore.setMinimumSize(new java.awt.Dimension(117, 25));
        btnExecutarRestore.setPreferredSize(new java.awt.Dimension(117, 25));
        btnExecutarRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarRestoreActionPerformed(evt);
            }
        });
        pnlGeral.add(btnExecutarRestore);
        btnExecutarRestore.setBounds(403, 193, 241, 25);

        tablManutencao.addTab("Geral", pnlGeral);

        getContentPane().add(tablManutencao);
        tablManutencao.setBounds(0, 0, 710, 256);
        tablManutencao.getAccessibleContext().setAccessibleName("");

        pnlBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));
        pnlBotoes.setName("pnlBotao"); // NOI18N
        pnlBotoes.setPreferredSize(new java.awt.Dimension(229, 33));

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/confirmar.png"))); // NOI18N
        btnConfirmar.setText("Ok");
        btnConfirmar.setToolTipText("");
        btnConfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmar.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnConfirmar.setMaximumSize(new java.awt.Dimension(70, 20));
        btnConfirmar.setMinimumSize(new java.awt.Dimension(70, 20));
        btnConfirmar.setName("btnConfirmar"); // NOI18N
        btnConfirmar.setPreferredSize(new java.awt.Dimension(85, 25));
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnAjudar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ajudar.png"))); // NOI18N
        btnAjudar.setToolTipText("");
        btnAjudar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAjudar.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btnAjudar.setMaximumSize(new java.awt.Dimension(70, 20));
        btnAjudar.setMinimumSize(new java.awt.Dimension(70, 20));
        btnAjudar.setName("btnAjudar"); // NOI18N
        btnAjudar.setPreferredSize(new java.awt.Dimension(85, 25));
        btnAjudar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjudarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnCancelar.setMaximumSize(new java.awt.Dimension(70, 20));
        btnCancelar.setMinimumSize(new java.awt.Dimension(70, 20));
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.setPreferredSize(new java.awt.Dimension(85, 25));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesLayout = new javax.swing.GroupLayout(pnlBotoes);
        pnlBotoes.setLayout(pnlBotoesLayout);
        pnlBotoesLayout.setHorizontalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAjudar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 493, Short.MAX_VALUE)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        pnlBotoesLayout.setVerticalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBotoesLayout.createSequentialGroup()
                        .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAjudar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(pnlBotoes);
        pnlBotoes.setBounds(0, 262, 713, 38);

        mnuArquivos.setText("Arquivo");
        mnuBarPrincipal.add(mnuArquivos);

        mnuAjuda.setText("Ajuda");
        mnuBarPrincipal.add(mnuAjuda);

        setJMenuBar(mnuBarPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        try {
            reescreverObjeto();

            JOptionPane.showMessageDialog(this.getParent(),
                    "Arquivo salvo com sucesso.");

            this.dispose();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Arquivo não pode ser salvo.\n\nMotivo: " + e);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Util.cancelar(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAjudarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjudarActionPerformed
        Util.ajudar("IFrmManBackup");
    }//GEN-LAST:event_btnAjudarActionPerformed

    private void lblSelCaminhoPgDumpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSelCaminhoPgDumpMouseReleased
        try {
            fcSelecionarArquivo.setSelectedFile(
                    new File(txtCaminhoPgDump.getText()));
            int returnVal = fcSelecionarArquivo.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                txtCaminhoPgDump.setText(
                        fcSelecionarArquivo.getSelectedFile().getAbsolutePath());
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Caminho não pode ser localizado.\n\nMotivo: " + e);
        }
    }//GEN-LAST:event_lblSelCaminhoPgDumpMouseReleased

    private void lblSelCaminhoPgRestoreMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSelCaminhoPgRestoreMouseReleased
        try {
            fcSelecionarArquivo.setSelectedFile(
                    new File(txtCaminhoPgRestore.getText()));
            int returnVal = fcSelecionarArquivo.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                txtCaminhoPgRestore.setText(
                        fcSelecionarArquivo.getSelectedFile().getAbsolutePath());
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Caminho não pode ser localizado.\n\nMotivo: " + e);
        }
    }//GEN-LAST:event_lblSelCaminhoPgRestoreMouseReleased

    private void btnExecutarBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarBackupActionPerformed
        backup.setArquivoBackup(
                backup.getCaminhoArquivo(txtArquivoBackup.getText()));

        String msg = backup.gerarBackup(this.getParent());
        if (!msg.equals("")) {
            JOptionPane.showMessageDialog(null,
                    "Backup não foi executado.\nMotivo: " + msg);
        }
    }//GEN-LAST:event_btnExecutarBackupActionPerformed

    private void btnExecutarRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarRestoreActionPerformed
        int selectedOption
                = JOptionPane.showConfirmDialog(null,
                        "Antes de prosseguir leia com atenção as instruções a seguir:\n\n"
                        + " * Para segurança um backup do banco atual será executado;\n"
                        + " * Estra operação não pode ser interrompida após seu início;\n"
                        + " * Durante este processo o sistema não poderá ser utilizado;\n"
                        + " * O tempo de duração do processo dependerá do tamanho do banco.\n\n\n"
                        + "Deseja prosseguir e continuar com a restaruação do banco?",
                        "Sistema informa:", JOptionPane.YES_NO_OPTION);
        if (selectedOption == JOptionPane.YES_OPTION) {
            // cria o caminho para o arquivo de backup
            backup.setArquivoBackup(backup.getCaminhoArquivo());
            // gera backup
            String msg = backup.gerarBackup(this.getParent());
            if (!msg.equals("")) {
                JOptionPane.showMessageDialog(null,
                        "Backup não foi executada.\nMotivo: " + msg);
            } else {
                backup.setArquivoBackup(txtArquivoBackup.getText());
                // restaura o backup
                msg = backup.restaurarBackup(this);
                if (!msg.equals("")) {
                    JOptionPane.showMessageDialog(null,
                            "Restauração não foi executada.\nMotivo: " + msg);
                }
            }
        }
    }//GEN-LAST:event_btnExecutarRestoreActionPerformed

    private void lblSelArquivoBackupMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSelArquivoBackupMouseReleased
        try {
            fcSelecionarArquivo.setSelectedFile(
                    new File(txtArquivoBackup.getText()));
            int returnVal = fcSelecionarArquivo.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                txtArquivoBackup.setText(
                        fcSelecionarArquivo.getSelectedFile().getAbsolutePath());
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this.getParent(),
                    "Caminho não pode ser localizado.\n\nMotivo: " + e);
        }
    }//GEN-LAST:event_lblSelArquivoBackupMouseReleased

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        try {
            backup.descarregarPropriedades();
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjudar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnExecutarBackup;
    private javax.swing.JButton btnExecutarRestore;
    private javax.swing.JFileChooser fcSelecionarArquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblSelArquivoBackup;
    private javax.swing.JLabel lblSelCaminhoPgDump;
    private javax.swing.JLabel lblSelCaminhoPgRestore;
    private javax.swing.JMenu mnuAjuda;
    private javax.swing.JMenu mnuArquivos;
    private javax.swing.JMenuBar mnuBarPrincipal;
    private javax.swing.JPanel pnlBotoes;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JTabbedPane tablManutencao;
    private javax.swing.JTextField txtArquivoBackup;
    private javax.swing.JTextField txtCaminhoPgDump;
    private javax.swing.JTextField txtCaminhoPgRestore;
    private javax.swing.JTextField txtNomeBanco;
    private javax.swing.JTextField txtNomeServidor;
    private javax.swing.JTextField txtNumPorta;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
